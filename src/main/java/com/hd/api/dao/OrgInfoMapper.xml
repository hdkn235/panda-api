<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.api.dao.OrgInfoMapper">
  <resultMap id="BaseResultMap" type="OrgInfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <constructor>
      <idArg column="OrgId" javaType="java.lang.String" jdbcType="CHAR" />
      <arg column="OrgName" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CustomType" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Owner" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Branch" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="SuperiorId" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="Location" javaType="java.lang.String" jdbcType="NVARCHAR" />
      <arg column="City" javaType="java.lang.String" jdbcType="NVARCHAR" />
      <arg column="Remark" javaType="java.lang.String" jdbcType="NVARCHAR" />
      <arg column="InviteCode" javaType="java.lang.String" jdbcType="VARCHAR" />
      <arg column="CreateTime" javaType="java.util.Date" jdbcType="TIMESTAMP" />
      <arg column="Status" javaType="java.lang.Integer" jdbcType="INTEGER" />
      <arg column="UserId" javaType="java.lang.String" jdbcType="VARCHAR" />
    </constructor>
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    OrgId, OrgName, CustomType, Owner, Branch, SuperiorId, Location, City, Remark, InviteCode, 
    CreateTime, Status, UserId
  </sql>
  
  <!-- 自定义 -->
  <select id="listGroupByBranch" resultType="OrgInfoDTO">
  	SELECT 
  	<include refid="Base_Column_List" />
  	FROM OrgInfo WHERE Branch=#{branch}
  	order by orgName
  </select>
  
  <select id="getByOrgName" resultMap="BaseResultMap">
  	SELECT 
  	<include refid="Base_Column_List" /> 
  	FROM OrgInfo WHERE OrgName=#{orgName}
  </select>
    
  <select id="getByInviteCode" resultMap="BaseResultMap">
	SELECT 
	<include refid="Base_Column_List"></include>
	FROM OrgInfo WHERE InviteCode=#{inviteCode} 
	<if test="branch != null">
	AND Branch=#{branch}
	</if>
  </select>
  
  <update id="updateInviteCode">
  	UPDATE  OrgInfo
	SET     InviteCode = #{inviteCode}
	WHERE   OrgId = ( SELECT    OrgId
	                  FROM      UserInfo
	                  WHERE     UserId = #{userId}
	                )
  </update>
  
  <select id="getByUserId" resultMap="BaseResultMap">
  	SELECT  
  	<include refid="Base_Column_List" /> 
	FROM    OrgInfo
	WHERE   OrgId = ( SELECT    OrgId
	                  FROM      UserInfo
	                  WHERE     UserId = #{userId}
	                )
  </select>
  
  <select id="getByCreatorId" resultMap="BaseResultMap">
  	SELECT  
  	<include refid="Base_Column_List" /> 
	FROM    OrgInfo
	WHERE   UserId = #{userId}
  </select>
  
  <select id="countSubOrg" resultType="int">
  	SELECT  COUNT(*) num
	FROM    OrgInfo
	WHERE   SuperiorId = #{orgId}
  </select>
  
  <select id="getOrgFullInfoByUserId" resultType="OrgFullInfoDTO">
  	SELECT o.*, dt.Value as BranchType, d.Name as Province, so.OrgName as Superior FROM OrgInfo AS o
	LEFT JOIN UserInfo AS u 
	ON o.OrgId = u.OrgId
	LEFT JOIN (SELECT * FROM DictClass WHERE DictClassId IN (SELECT DictClassId FROM Dict)) as d
	ON u.City = d.Code
	LEFT JOIN (SELECT * FROM Dict WHERE DictClassId IN (SELECT DictClassId FROM DictClass where Code = 'Branch')) as dt
	ON dt.Code = O.Branch
	LEFT JOIN OrgInfo AS so
	ON so.SuperiorId = o.OrgId
	WHERE u.UserId = #{userId}
  </select>
  
  
  <!-- 自定义 -->
</mapper>