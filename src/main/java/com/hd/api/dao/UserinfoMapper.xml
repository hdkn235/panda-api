<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.hd.api.dao.UserinfoMapper">
  <resultMap id="BaseResultMap" type="Userinfo">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    <id column="UserId" jdbcType="CHAR" property="userid" />
    <result column="Phone" jdbcType="NVARCHAR" property="phone" />
    <result column="UserName" jdbcType="NVARCHAR" property="username" />
    <result column="Email" jdbcType="NVARCHAR" property="email" />
    <result column="Location" jdbcType="NVARCHAR" property="location" />
    <result column="City" jdbcType="NVARCHAR" property="city" />
    <result column="School" jdbcType="NVARCHAR" property="school" />
    <result column="Interest" jdbcType="NVARCHAR" property="interest" />
    <result column="OnLineTime" jdbcType="NVARCHAR" property="onlinetime" />
    <result column="Level" jdbcType="NVARCHAR" property="level" />
    <result column="Credits" jdbcType="NVARCHAR" property="credits" />
    <result column="OrgId" jdbcType="CHAR" property="orgid" />
    <result column="SuperiorId" jdbcType="CHAR" property="superiorid" />
    <result column="AvatarUrl" jdbcType="NVARCHAR" property="avatarurl" />
    <result column="Gender" jdbcType="NVARCHAR" property="gender" />
    <result column="CreateTime" jdbcType="TIMESTAMP" property="createtime" />
    <result column="IsTemp" jdbcType="INTEGER" property="istemp" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--
      WARNING - @mbg.generated
      This element is automatically generated by MyBatis Generator, do not modify.
    -->
    UserId, Phone, UserName, Email, Location, City, School, Interest, OnLineTime, Level, 
    Credits, OrgId, SuperiorId, AvatarUrl, Gender, CreateTime, IsTemp
  </sql>
  
  <!-- 自定义 -->
  <select id="getMyInfo" parameterType="java.lang.String" resultType="com.hd.api.dto.UserInfoDTO">
	SELECT  u.UserId ,
	        u.UserName ,
	        u.Phone ,
	        u.Email ,
	        u.Location ,
	        u.City ,
	        u.School ,
	        u.Interest ,
	        u.OrgId ,
	        o.OrgName ,
	        u.AvatarUrl ,
	        u.Gender ,
	        u.OnLineTime ,
	        u.Credits ,
	        CAST(l.LoginType AS CHAR(1)) LoginType ,
	        CAST(( SELECT   COUNT(*)
	               FROM     Collection c
	                        LEFT JOIN SelectedInfo si ON c.MessageId = si.SelectedInfoId
	                        LEFT JOIN SpecialArticle sa ON c.MessageId = sa.ArticleId
	                        LEFT JOIN DiscussTheme dt ON c.MessageId = dt.ThemeId
	               WHERE    c.UserId = u.UserId
	                        AND ( si.SelectedInfoId IS NOT NULL
	                              OR sa.ArticleId IS NOT NULL
	                              OR dt.ThemeId IS NOT NULL
	                            )
	             ) AS VARCHAR(10)) MyCollection ,
	        CAST(( SELECT   COUNT(1)
	               FROM     ( SELECT    ThemeId
	                          FROM      DiscussTheme d
	                          WHERE     d.UserId = u.UserId
	                        ) t
	             ) AS VARCHAR(10)) MyPublish
	FROM    UserInfo u
	        LEFT JOIN OrgInfo o ON o.OrgId = u.OrgId
	        LEFT JOIN LoginUser l ON l.UserId = u.UserId
	WHERE   u.UserId = #{userid,jdbcType=CHAR}
  </select>
  
  <select id="getByPhone" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from UserInfo
    where Phone = #{phone}
  </select>
  
  <select id="getInviteUser" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from UserInfo
    where Phone = #{phone} and Level='B'
  </select>
  
  <select id="listUserInfo" resultType="UserDTO">
	SELECT  UserId ,
	        UserName ,
	        Phone 
	FROM    UserInfo u
	WHERE   OrgId = ( SELECT    OrgId
	                  FROM      UserInfo
	                  WHERE     UserId = #{userId}
	                )
	        AND u.IsTemp != 1
	ORDER BY UserName	                
  </select>
  
    <select id="listOrgUserInfo" resultType="UserDTO">
	SELECT  UserId ,
	        UserName ,
	        Phone ,
	        Level ,
	        ISNULL(AvatarUrl,'') AvatarUrl,
	        d.Value LevelName
	FROM    UserInfo u
	        LEFT JOIN ( SELECT  *
	                    FROM    Dict
	                    WHERE   DictClassId = ( SELECT  DictClassId
	                                            FROM    DictClass
	                                            WHERE   Code = 'Level'
	                                          )
	                  ) d ON u.Level = d.Code
	WHERE   OrgId = ( SELECT    OrgId
	                  FROM      UserInfo
	                  WHERE     UserId = #{userId}
	                )
	        AND u.IsTemp != 1
	ORDER BY UserName	                
  </select>
  
  <select id="getLoginType" resultType="string">
  	SELECT  ( CASE WHEN o.UserId = u.UserId THEN o.Branch + 'A'
	               ELSE o.Branch + u.Level
	          END ) LoginType
	FROM    UserInfo u
	        LEFT JOIN OrgInfo o ON u.OrgId = o.OrgId
	WHERE   u.UserId = #{userId}
  </select>
  
  <select id="listSuccessor" resultType="UserDTO">
  	SELECT  u.UserId ,
	        u.UserName ,
	        u.Phone
	FROM    UserInfo u
	LEFT JOIN OrgInfo o ON o.OrgId = u.OrgId
	WHERE   u.OrgId = ( SELECT  OrgId
	                    FROM    UserInfo
	                    WHERE   UserId = #{userid}
	                  )
	        AND u.Level = 'C'
	        AND o.Branch ='B'
	        AND u.IsTemp != 1
  </select>
  
  <select id="listByRoleLevel" resultType="UserDTO">
	SELECT  u.UserId ,
	        u.UserName ,
	        u.Phone
	FROM    UserInfo u
	        LEFT JOIN OrgInfo o ON o.OrgId = u.OrgId
	        LEFT JOIN UserRole ur ON u.UserId = ur.UserId
	        LEFT JOIN Role r ON ur.RoleId = r.RoleId
	WHERE   u.OrgId = ( SELECT  OrgId
	                    FROM    UserInfo
	                    WHERE   UserId = #{userid}
	                  )
	        AND r.Level = #{roleLevel}
	        AND u.IsTemp != 1
  </select>
  
  <select id="getUserListByUserId" resultType="UserFullInfoDTO">
  	SELECT 	u.*,  
  			o.OrgName, 
  			d.Value LevelName
  	FROM	UserInfo AS u 
	LEFT JOIN OrgInfo AS o ON u.OrgId = o.OrgId
	LEFT JOIN
			(SELECT * FROM Dict WHERE DictClassId = (SELECT DictClassId FROM DictClass WHERE Code  = 'Level')) 
			AS d ON u.Level  = d.Code
	WHERE u.OrgId = (SELECT OrgId FROM UserInfo WHERE UserId = #{userId}) AND u.IsTemp != 1
  </select>
  
  <select id="getUserFullInfoByUserId" resultType="UserFullInfoDTO">
  	SELECT u.*, dt.Value as LevelType, s.UserName as SuperiorName, d.Name as Province FROM UserInfo AS u
	LEFT JOIN UserInfo AS s 
	ON s.UserId = u.SuperiorId
	LEFT JOIN (SELECT * FROM DictClass WHERE DictClassId IN (SELECT DictClassId FROM Dict)) as d
	ON u.City = d.Code
	LEFT JOIN (SELECT * FROM Dict WHERE DictClassId IN (SELECT DictClassId FROM DictClass WHERE Code = 'Level')) as dt
	ON u.Level = dt.Code
	WHERE u.UserId = #{userId}
  </select>
  
  <select id="listByOrgId" resultMap="BaseResultMap">
	SELECT  
	<include refid="Base_Column_List" />
	FROM    UserInfo u
	WHERE   OrgId = #{orgId}
  </select>

  <!-- 自定义 -->
</mapper>